import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

// UI components that will be shown on all pages
import Header from "./components/layout/header";
import Footer from "./components/layout/footer";
// Import Providers to make functionality available throughout the app
import { CartProvider } from "./context/cartContext";
import { AuthProvider } from "./context/AuthContext";

// Configure Geist font for consistent typography
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// Metadata for SEO
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


/**
 * RootLayout is the main layout component that wraps all pages
 * It provides:
 * 1. The AuthProvider - managing user authentication state across the app
 * 2. The CartProvider - enabling cart functionality across the app
 * 3. Header and Footer components - for consistent navigation
 * 4. Font configuration - for consistent typography
 *
 * The CartProvider allows all pages and components to access cart state
 * and interact with products from Supabase through the cart context
 */
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased min-h-screen flex flex-col`}
      >
        {/* 
          AuthProvider wraps the entire application to provide authentication functionality
          This allows any component to access user authentication state using useAuth hook
        */}
        <AuthProvider>
          {/* 
            CartProvider wraps the application to provide cart functionality
            This allows any component to access and modify cart data using the useCart hook
            Products from Supabase can be added to cart from anywhere in the application
          */}
          <CartProvider>
            {/* We can't use useAuth here because it must be used inside the AuthProvider */}
            <Header />
            <main className="flex-grow">
              {children}
            </main>
            <Footer />
          </CartProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
